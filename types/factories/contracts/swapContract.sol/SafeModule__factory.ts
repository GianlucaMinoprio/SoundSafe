/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SafeModule,
  SafeModuleInterface,
} from "../../../contracts/swapContract.sol/SafeModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenToSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "desiredToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountToSwap",
        type: "uint256",
      },
    ],
    name: "SwapRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenToSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "desiredToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSwap",
        type: "uint256",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610477806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806342f1181e146100515780637071293914610085578063e5d7c026146100b4578063fe9fbb80146100c7575b600080fd5b61008361005f3660046103f3565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b005b6100836100933660046103f3565b6001600160a01b03166000908152602081905260409020805460ff19169055565b6100836100c2366004610415565b610107565b6100f36100d53660046103f3565b6001600160a01b031660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b3360009081526020819052604090205460ff1661016b5760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190610451565b1161021c5760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642064657369726564546f6b656e0000000000000000000000006044820152606401610162565b6000836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610451565b116102cd5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420746f6b656e546f53776170000000000000000000000000006044820152606401610162565b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103379190610451565b10156103855760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420746f6b656e546f537761702062616c616e63656044820152606401610162565b604080516001600160a01b0385811682528416602082015290810182905233907f2db99e462b5fbec392135fb080d4f872aae36917f43f9a257b6aaf8b831519579060600160405180910390a2505050565b80356001600160a01b03811681146103ee57600080fd5b919050565b60006020828403121561040557600080fd5b61040e826103d7565b9392505050565b60008060006060848603121561042a57600080fd5b610433846103d7565b9250610441602085016103d7565b9150604084013590509250925092565b60006020828403121561046357600080fd5b505191905056fea164736f6c6343000814000a";

type SafeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeModule__factory extends ContractFactory {
  constructor(...args: SafeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SafeModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SafeModule__factory {
    return super.connect(runner) as SafeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeModuleInterface {
    return new Interface(_abi) as SafeModuleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SafeModule {
    return new Contract(address, _abi, runner) as unknown as SafeModule;
  }
}
