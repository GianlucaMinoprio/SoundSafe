const hre =   require('hardhat/types');

const ethers = require('ethers');
const deployModule = async (hre) => {
    const { deployments, getNamedAccounts } = hre;
    const { deploy } = deployments;
    const { deployer } = await getNamedAccounts();

    await deploy('Module', {
        from: deployer,
        args: [],
        log: true,
    });
}

deployModule.tags = ['Module'];

async function main() {
    const privateKey = process.env.PRIVATE_KEY;

    const providerUrl = 'https://mainnet.infura.io/v3/' + process.env.INFURA_API_KEY;
    const provider = new ethers.JsonRpcProvider(providerUrl);
    //const wallet = new ethers.Wallet(privateKey, provider);

    const safeWalletAddress = '0x1A0cc861E781753D5bbC0FC11542c44b324b5927';

    const tokenSwapContractFactory = new ethers.ContractFactory(['constructor(address)'], '0x608060405234801561001057600080fd5b50604051610e81380380610e818339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610d29806101586000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634bbf3a7a146100675780636215be77146100835780638da5cb5b1461009f5780639e281a98146100bd578063eec7faa1146100d9578063fc0c546a146100f7575b600080fd5b610081600480360381019061007c91906106f9565b610115565b005b61009d600480360381019061009891906106f9565b6102d1565b005b6100a761049f565b6040516100b49190610767565b60405180910390f35b6100d760048036038101906100d291906107ae565b6104c3565b005b6100e1610692565b6040516100ee91906107fd565b60405180910390f35b6100ff610698565b60405161010c9190610877565b60405180910390f35b60008111610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f906108ef565b60405180910390fd5b80600254101561019d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101949061095b565b60405180910390fd5b80600260008282546101af91906109aa565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102139291906109de565b6020604051808303816000875af1158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610a3f565b610295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028c90610ab8565b60405180910390fd5b7f5cf069f6412972a6c15aa4f5d0a340bfc369c3118f4cf8960b568ffe7ae4621333826040516102c69291906109de565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690610b24565b60405180910390fd5b600081116103a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610399906108ef565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161040193929190610b44565b6020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610a3f565b610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610bc7565b60405180910390fd5b80600260008282546104959190610be7565b9250508190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890610b24565b60405180910390fd5b600254811115610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610c67565b60405180910390fd5b80600260008282546105a891906109aa565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161060c9291906109de565b6020604051808303816000875af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610a3f565b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590610cd3565b60405180910390fd5b5050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b6106d6816106c3565b81146106e157600080fd5b50565b6000813590506106f3816106cd565b92915050565b60006020828403121561070f5761070e6106be565b5b600061071d848285016106e4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075182610726565b9050919050565b61076181610746565b82525050565b600060208201905061077c6000830184610758565b92915050565b61078b81610746565b811461079657600080fd5b50565b6000813590506107a881610782565b92915050565b600080604083850312156107c5576107c46106be565b5b60006107d385828601610799565b92505060206107e4858286016106e4565b9150509250929050565b6107f7816106c3565b82525050565b600060208201905061081260008301846107ee565b92915050565b6000819050919050565b600061083d61083861083384610726565b610818565b610726565b9050919050565b600061084f82610822565b9050919050565b600061086182610844565b9050919050565b61087181610856565b82525050565b600060208201905061088c6000830184610868565b92915050565b600082825260208201905092915050565b7f67697665206120726967687420616d6f756e7400000000000000000000000000600082015250565b60006108d9601383610892565b91506108e4826108a3565b602082019050919050565b60006020820190508181036000830152610908816108cc565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610945601483610892565b91506109508261090f565b602082019050919050565b6000602082019050818103600083015261097481610938565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b5826106c3565b91506109c0836106c3565b92508282039050818111156109d8576109d761097b565b5b92915050565b60006040820190506109f36000830185610758565b610a0060208301846107ee565b9392505050565b60008115159050919050565b610a1c81610a07565b8114610a2757600080fd5b50565b600081519050610a3981610a13565b92915050565b600060208284031215610a5557610a546106be565b5b6000610a6384828501610a2a565b91505092915050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b6000610aa2600f83610892565b9150610aad82610a6c565b602082019050919050565b60006020820190508181036000830152610ad181610a95565b9050919050565b7f54686973206973206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610b0e601583610892565b9150610b1982610ad8565b602082019050919050565b60006020820190508181036000830152610b3d81610b01565b9050919050565b6000606082019050610b596000830186610758565b610b666020830185610758565b610b7360408301846107ee565b949350505050565b7f5472616e73666572206661696c6564206263206f6620706172616d6574657273600082015250565b6000610bb1602083610892565b9150610bbc82610b7b565b602082019050919050565b60006020820190508181036000830152610be081610ba4565b9050919050565b6000610bf2826106c3565b9150610bfd836106c3565b9250828201905080821115610c1557610c1461097b565b5b92915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b6000610c51601083610892565b9150610c5c82610c1b565b602082019050919050565b60006020820190508181036000830152610c8081610c44565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610cbd600f83610892565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b905091905056fea2646970667358221220b48715f6c6b62fcd2a04ec8fd07eb615d28fcfcd091e339b502badacede817cd64736f6c63430008140033, wallet');


    const tokenSwapContract  = await tokenSwapContractFactory.deploy(safeWalletAddress);

//    await tokenSwapContract.deploy();

    console.log('TokenSwap contract deployed to:', tokenSwapContract.getAddress());
}

main().catch((error) => {
    console.error(error);
    process.exit(1);
});
